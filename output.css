/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-amber-50: oklch(98.7% 0.022 95.277);
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-teal-700: oklch(51.1% 0.096 186.391);
    --color-sky-400: oklch(74.6% 0.16 232.661);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-indigo-300: oklch(78.5% 0.115 274.713);
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --leading-tight: 1.25;
    --radius-lg: 0.5rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-dvh {
    height: 100dvh;
  }
  .h-full {
    height: 100%;
  }
  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-30 {
    width: calc(var(--spacing) * 30);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-\[clamp\(1rem\,0\.08rem_\+4vw\,3rem\)\] {
    width: clamp(1rem, 0.08rem + 4vw, 3rem);
  }
  .w-\[clamp\(1rem\,0\.08rem_\+4vw\,20rem\)\] {
    width: clamp(1rem, 0.08rem + 4vw, 20rem);
  }
  .w-\[clamp\(1rem\,0\.08rem_\+_4vw\,3rem\)\] {
    width: clamp(1rem, 0.08rem + 4vw, 3rem);
  }
  .w-\[clamp\(1rem\,0\.08rem_\+_4vw\,12rem\)\] {
    width: clamp(1rem, 0.08rem + 4vw, 12rem);
  }
  .w-\[clamp\(1rem\,0\.8rem_\+_4vw\,3rem\)\] {
    width: clamp(1rem, 0.8rem + 4vw, 3rem);
  }
  .w-\[clamp\(6rem\,-0\.8rem_\+_5vw\,15rem\)\] {
    width: clamp(6rem, -0.8rem + 5vw, 15rem);
  }
  .w-\[clamp\(6rem\,6rem_\+_3\.5vw\,20rem\)\] {
    width: clamp(6rem, 6rem + 3.5vw, 20rem);
  }
  .w-\[clamp\(6rem\,6rem_\+_5vw\,15rem\)\] {
    width: clamp(6rem, 6rem + 5vw, 15rem);
  }
  .w-\[clamp\(6rem\,6rem_\+_5vw\,20rem\)\] {
    width: clamp(6rem, 6rem + 5vw, 20rem);
  }
  .w-\[clamp\(6rem\,6rem_\+_10vw\,15rem\)\] {
    width: clamp(6rem, 6rem + 10vw, 15rem);
  }
  .w-\[clamp\(6rem\,6rem_\+_10vw\,20rem\)\] {
    width: clamp(6rem, 6rem + 10vw, 20rem);
  }
  .w-\[clamp\(8rem\,6rem_\+_3\.5vw\,20rem\)\] {
    width: clamp(8rem, 6rem + 3.5vw, 20rem);
  }
  .w-\[clamp\(8rem\,8rem_\+_3\.5vw\,20rem\)\] {
    width: clamp(8rem, 8rem + 3.5vw, 20rem);
  }
  .w-\[clamp\(10rem\,8rem_\+_3\.5vw\,20rem\)\] {
    width: clamp(10rem, 8rem + 3.5vw, 20rem);
  }
  .w-\[clamp\(10rem\,10rem_\+_3\.5vw\,20rem\)\] {
    width: clamp(10rem, 10rem + 3.5vw, 20rem);
  }
  .w-full {
    width: 100%;
  }
  .max-w-20 {
    max-width: calc(var(--spacing) * 20);
  }
  .max-w-30 {
    max-width: calc(var(--spacing) * 30);
  }
  .max-w-40 {
    max-width: calc(var(--spacing) * 40);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-dvw {
    min-width: 100dvw;
  }
  .flex-1 {
    flex: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .snap-x {
    scroll-snap-type: x var(--tw-scroll-snap-strictness);
  }
  .snap-y {
    scroll-snap-type: y var(--tw-scroll-snap-strictness);
  }
  .snap-mandatory {
    --tw-scroll-snap-strictness: mandatory;
  }
  .snap-center {
    scroll-snap-align: center;
  }
  .snap-start {
    scroll-snap-align: start;
  }
  .list-none {
    list-style-type: none;
  }
  .auto-cols-auto {
    grid-auto-columns: auto;
  }
  .grid-flow-row {
    grid-auto-flow: row;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .self-center {
    align-self: center;
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-scroll {
    overflow: scroll;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-x-scroll {
    overflow-x: scroll;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .overflow-y-scroll {
    overflow-y: scroll;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .bg-amber-50 {
    background-color: var(--color-amber-50);
  }
  .bg-amber-100 {
    background-color: var(--color-amber-100);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .fill-blue-500 {
    fill: var(--color-blue-500);
  }
  .fill-green-500 {
    fill: var(--color-green-500);
  }
  .fill-red-500 {
    fill: var(--color-red-500);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .ps-4 {
    padding-inline-start: calc(var(--spacing) * 4);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-\[clamp\(1rem\,0\.8rem_\+_5vw\,12rem\)\]\/tight {
    font-size: clamp(1rem, 0.8rem + 5vw, 12rem);
    line-height: var(--leading-tight);
  }
  .text-\[clamp\(1rem\,0\.8rem_\+_6vw\,15rem\)\]\/tight {
    font-size: clamp(1rem, 0.8rem + 6vw, 15rem);
    line-height: var(--leading-tight);
  }
  .text-\[clamp\(1rem\,0\.8rem_\+_8vw\,12rem\)\]\/tight {
    font-size: clamp(1rem, 0.8rem + 8vw, 12rem);
    line-height: var(--leading-tight);
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-\[clamp\(0\.8rem\,-0\.08rem_\+_2vw\,3rem\)\] {
    font-size: clamp(0.8rem, -0.08rem + 2vw, 3rem);
  }
  .text-\[clamp\(0\.9rem\,-0\.08rem_\+_2vw\,3rem\)\] {
    font-size: clamp(0.9rem, -0.08rem + 2vw, 3rem);
  }
  .text-\[clamp\(1rem\,-0\.08rem_\+_1vw\,3rem\)\] {
    font-size: clamp(1rem, -0.08rem + 1vw, 3rem);
  }
  .text-\[clamp\(1rem\,-0\.08rem_\+_2vw\,3rem\)\] {
    font-size: clamp(1rem, -0.08rem + 2vw, 3rem);
  }
  .text-\[clamp\(1rem\,-0\.08rem_\+_3\.5vw\,3rem\)\] {
    font-size: clamp(1rem, -0.08rem + 3.5vw, 3rem);
  }
  .text-\[clamp\(1rem\,0\.8rem_\+_4vw\,3rem\)\] {
    font-size: clamp(1rem, 0.8rem + 4vw, 3rem);
  }
  .text-\[clamp\(1rem\,0\.8rem_\+_8vw\,12rem\)\] {
    font-size: clamp(1rem, 0.8rem + 8vw, 12rem);
  }
  .text-\[clamp\(1rem\,0\.8rem_\+_12vw\,3rem\)\] {
    font-size: clamp(1rem, 0.8rem + 12vw, 3rem);
  }
  .text-\[clamp\(1rem\,0\.8rem_\+_12vw\,12rem\)\] {
    font-size: clamp(1rem, 0.8rem + 12vw, 12rem);
  }
  .text-\[clamp\(1rem\,1rem_\+_1\.5vw\,3rem\)\] {
    font-size: clamp(1rem, 1rem + 1.5vw, 3rem);
  }
  .text-\[clamp\(1rem\,1rem_\+_1vw\,3rem\)\] {
    font-size: clamp(1rem, 1rem + 1vw, 3rem);
  }
  .text-\[clamp\(1rem\,1rem_\+_2\.5vw\,3rem\)\] {
    font-size: clamp(1rem, 1rem + 2.5vw, 3rem);
  }
  .text-\[clamp\(1rem\,1rem_\+_2\.5vw_3rem\)\] {
    font-size: clamp(1rem, 1rem + 2.5vw 3rem);
  }
  .text-\[clamp\(1rem\,2vw\,2rem\)\] {
    font-size: clamp(1rem, 2vw, 2rem);
  }
  .text-\[clamp\(1rem\,3\.5vw\,2rem\)\] {
    font-size: clamp(1rem, 3.5vw, 2rem);
  }
  .text-\[clamp\(1rem\,3\.5vw\,3rem\)\] {
    font-size: clamp(1rem, 3.5vw, 3rem);
  }
  .text-\[clamp\(1rem\,5vw\,3rem\)\] {
    font-size: clamp(1rem, 5vw, 3rem);
  }
  .text-\[clamp\(1rem_1rem_\+_2\.5vw_3rem\)\] {
    font-size: clamp(1rem 1rem + 2.5vw 3rem);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-amber-50 {
    color: var(--color-amber-50);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .font-stretch-expanded {
    font-stretch: expanded;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .group-hover\:flex {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: flex;
      }
    }
  }
  .group-hover\:hidden {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: none;
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-focus\:flex {
    &:is(:where(.group):focus *) {
      display: flex;
    }
  }
  .group-focus\:hidden {
    &:is(:where(.group):focus *) {
      display: none;
    }
  }
  .group-focus\:opacity-100 {
    &:is(:where(.group):focus *) {
      opacity: 100%;
    }
  }
  .peer-hover\:bg-indigo-300 {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        background-color: var(--color-indigo-300);
      }
    }
  }
  .peer-hover\:bg-sky-400 {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        background-color: var(--color-sky-400);
      }
    }
  }
  .peer-hover\:bg-teal-700 {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        background-color: var(--color-teal-700);
      }
    }
  }
  .peer-hover\:text-red-800 {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        color: var(--color-red-800);
      }
    }
  }
  .peer-focus\:hidden {
    &:is(:where(.peer):focus ~ *) {
      display: none;
    }
  }
  .peer-focus\:bg-sky-400 {
    &:is(:where(.peer):focus ~ *) {
      background-color: var(--color-sky-400);
    }
  }
  .hover\:flex-2 {
    &:hover {
      @media (hover: hover) {
        flex: 2;
      }
    }
  }
  .hover\:flex-3 {
    &:hover {
      @media (hover: hover) {
        flex: 3;
      }
    }
  }
  .hover\:flex-6 {
    &:hover {
      @media (hover: hover) {
        flex: 6;
      }
    }
  }
  .hover\:flex-8 {
    &:hover {
      @media (hover: hover) {
        flex: 8;
      }
    }
  }
  .hover\:bg-blue-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-500);
      }
    }
  }
  .hover\:bg-green-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-500);
      }
    }
  }
  .hover\:bg-red-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-500);
      }
    }
  }
  .focus\:flex-2 {
    &:focus {
      flex: 2;
    }
  }
  .focus\:flex-3 {
    &:focus {
      flex: 3;
    }
  }
  .focus\:flex-6 {
    &:focus {
      flex: 6;
    }
  }
  .focus\:flex-8 {
    &:focus {
      flex: 8;
    }
  }
  .focus\:bg-blue-500 {
    &:focus {
      background-color: var(--color-blue-500);
    }
  }
  .focus\:bg-green-500 {
    &:focus {
      background-color: var(--color-green-500);
    }
  }
  .focus\:bg-red-500 {
    &:focus {
      background-color: var(--color-red-500);
    }
  }
  .active\:flex-8 {
    &:active {
      flex: 8;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:text-7xl {
    @media (width >= 40rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .sm\:focus\:flex-1 {
    @media (width >= 40rem) {
      &:focus {
        flex: 1;
      }
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-full {
    @media (width >= 48rem) {
      height: 100%;
    }
  }
  .md\:grid-cols-\[1fr_3fr\] {
    @media (width >= 48rem) {
      grid-template-columns: 1fr 3fr;
    }
  }
  .md\:grid-cols-\[3fr_1fr\] {
    @media (width >= 48rem) {
      grid-template-columns: 3fr 1fr;
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:gap-4 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .md\:p-4 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .md\:text-2xl {
    @media (width >= 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-8xl {
    @media (width >= 48rem) {
      font-size: var(--text-8xl);
      line-height: var(--tw-leading, var(--text-8xl--line-height));
    }
  }
  .md\:text-xl {
    @media (width >= 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .md\:group-hover\:hidden {
    @media (width >= 48rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          display: none;
        }
      }
    }
  }
  .md\:hover\:flex-\[8\] {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          flex: 8;
        }
      }
    }
  }
  .md\:hover\:bg-blue-500 {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-500);
        }
      }
    }
  }
  .md\:hover\:bg-green-500 {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-green-500);
        }
      }
    }
  }
  .md\:hover\:bg-red-500 {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-red-500);
        }
      }
    }
  }
  .lg\:gap-4 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .lg\:p-4 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .lg\:text-7xl {
    @media (width >= 64rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .lg\:text-9xl {
    @media (width >= 64rem) {
      font-size: var(--text-9xl);
      line-height: var(--tw-leading, var(--text-9xl--line-height));
    }
  }
  .\@sm\:block {
    @container (width >= 24rem) {
      display: block;
    }
  }
  .\@sm\:bg-amber-50 {
    @container (width >= 24rem) {
      background-color: var(--color-amber-50);
    }
  }
  .\@sm\:bg-amber-100 {
    @container (width >= 24rem) {
      background-color: var(--color-amber-100);
    }
  }
  .\[\&\[open\]\]\:flex-\[8\] {
    &[open] {
      flex: 8;
    }
  }
  .\[\&\[open\]\]\:bg-blue-500 {
    &[open] {
      background-color: var(--color-blue-500);
    }
  }
  .\[\&\[open\]\]\:bg-green-500 {
    &[open] {
      background-color: var(--color-green-500);
    }
  }
  .\[\&\[open\]\]\:bg-red-500 {
    &[open] {
      background-color: var(--color-red-500);
    }
  }
  .\[details\[open\]_\&\]\:hidden {
    details[open] & {
      display: none;
    }
  }
}
@property --tw-scroll-snap-strictness {
  syntax: "*";
  inherits: false;
  initial-value: proximity;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-scroll-snap-strictness: proximity;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
    }
  }
}
